/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Transactions, TransactionsInterface } from "../Transactions";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "getTransactionsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pageSize",
        type: "uint256",
      },
    ],
    name: "getTransactionsPageAndTotalPages",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct Transactions.TransferStruct[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "totalPages",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "receiver",
        type: "address",
      },
    ],
    name: "transferAndRecord",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50610caf8061001f6000396000f3fe6080604052600436106100345760003560e01c806301c40d7214610039578063578cb8f914610077578063c9845a74146100a2575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b91906106c3565b6100be565b60405161006e929190610866565b60405180910390f35b34801561008357600080fd5b5061008c6103c6565b6040516100999190610896565b60405180910390f35b6100bc60048036038101906100b791906108ef565b6103cf565b005b6060600080830361012957600067ffffffffffffffff8111156100e4576100e361091c565b5b60405190808252806020026020018201604052801561011d57816020015b61010a610634565b8152602001906001900390816101025790505b506000915091506103bf565b606483111561013757606492505b60005484106101c35782600184600054610151919061097a565b61015b91906109ae565b6101659190610a11565b9050600067ffffffffffffffff8111156101825761018161091c565b5b6040519080825280602002602001820160405280156101bb57816020015b6101a8610634565b8152602001906001900390816101a05790505b5091506103bf565b600060016000546101d491906109ae565b9050600085826101e491906109ae565b905060006001826101f5919061097a565b9050600086905081811115610208578190505b60008167ffffffffffffffff8111156102245761022361091c565b5b60405190808252806020026020018201604052801561025d57816020015b61024a610634565b8152602001906001900390816102425790505b50905060005b8281101561038e576001818661027991906109ae565b8154811061028a57610289610a42565b5b90600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152505082828151811061037657610375610a42565b5b60200260200101819052508080600101915050610263565b50876001896000546103a0919061097a565b6103aa91906109ae565b6103b49190610a11565b955080965050505050505b9250929050565b60008054905090565b60003411610412576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040990610af4565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff163460405161043890610b45565b60006040518083038185875af1925050503d8060008114610475576040519150601f19603f3d011682016040523d82523d6000602084013e61047a565b606091505b50509050806104be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b590610ba6565b60405180910390fd5b60016000808282546104d0919061097a565b92505081905550600160405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815260200134815260200142815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015550507f9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc44338334426040516106289493929190610c34565b60405180910390a15050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b600080fd5b6000819050919050565b6106a08161068d565b81146106ab57600080fd5b50565b6000813590506106bd81610697565b92915050565b600080604083850312156106da576106d9610688565b5b60006106e8858286016106ae565b92505060206106f9858286016106ae565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061075a8261072f565b9050919050565b61076a8161074f565b82525050565b6107798161068d565b82525050565b6080820160008201516107956000850182610761565b5060208201516107a86020850182610761565b5060408201516107bb6040850182610770565b5060608201516107ce6060850182610770565b50505050565b60006107e0838361077f565b60808301905092915050565b6000602082019050919050565b600061080482610703565b61080e818561070e565b93506108198361071f565b8060005b8381101561084a57815161083188826107d4565b975061083c836107ec565b92505060018101905061081d565b5085935050505092915050565b6108608161068d565b82525050565b6000604082019050818103600083015261088081856107f9565b905061088f6020830184610857565b9392505050565b60006020820190506108ab6000830184610857565b92915050565b60006108bc8261072f565b9050919050565b6108cc816108b1565b81146108d757600080fd5b50565b6000813590506108e9816108c3565b92915050565b60006020828403121561090557610904610688565b5b6000610913848285016108da565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109858261068d565b91506109908361068d565b92508282019050808211156109a8576109a761094b565b5b92915050565b60006109b98261068d565b91506109c48361068d565b92508282039050818111156109dc576109db61094b565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610a1c8261068d565b9150610a278361068d565b925082610a3757610a366109e2565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60008201527f20746f207472616e736665720000000000000000000000000000000000000000602082015250565b6000610ade602c83610a71565b9150610ae982610a82565b604082019050919050565b60006020820190508181036000830152610b0d81610ad1565b9050919050565b600081905092915050565b50565b6000610b2f600083610b14565b9150610b3a82610b1f565b600082019050919050565b6000610b5082610b22565b9150819050919050565b7f4661696c656420746f2073656e6420457468657220746f207265636569766572600082015250565b6000610b90602083610a71565b9150610b9b82610b5a565b602082019050919050565b60006020820190508181036000830152610bbf81610b83565b9050919050565b610bcf8161074f565b82525050565b6000819050919050565b6000610bfa610bf5610bf08461072f565b610bd5565b61072f565b9050919050565b6000610c0c82610bdf565b9050919050565b6000610c1e82610c01565b9050919050565b610c2e81610c13565b82525050565b6000608082019050610c496000830187610bc6565b610c566020830186610c25565b610c636040830185610857565b610c706060830184610857565b9594505050505056fea2646970667358221220595713dc95d68aabe716061ad899c09bc091da7570c525f10b4dba14ea1c80a264736f6c634300081c0033";

type TransactionsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TransactionsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Transactions__factory extends ContractFactory {
  constructor(...args: TransactionsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Transactions & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Transactions__factory {
    return super.connect(runner) as Transactions__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransactionsInterface {
    return new Interface(_abi) as TransactionsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Transactions {
    return new Contract(address, _abi, runner) as unknown as Transactions;
  }
}
